package com.im.common.util.api.im.tencent.error;

import lombok.Getter;

/**
 * REST API 错误码.

 * @author mozzie
 */
@Getter
public enum ApiErrorMsgEnum {
    /**
     * 公共错误码
     * 请阅读：<a href="https://cloud.tencent.com/document/product/269/1519">REST API 公共错误码</a>
     */
    CODE_70001(70001,"UserSig签名错误"),
    CODE_70003(70003,"UserSig签名错误"),
    CODE_80001(80001,"消息文本安全打击"),
    CODE_60002(60002,"HTTP 解析错误 ，请检查 HTTP 请求 URL 格式"),
    CODE_60003(60003,"HTTP 请求 JSON 解析错误，请检查 JSON 格式"),
    CODE_60004(60004,"请求 URL 或 JSON 包体中帐号或签名错误"),
    CODE_60005(60005,"请求 URL 或 JSON 包体中帐号或签名错误"),
    CODE_60006(60006,"SDKAppID 失效，请核对 SDKAppID 有效性"),
    CODE_60007(60007,"REST 接口调用频率超过限制，请降低请求频率"),
    CODE_60008(60008,"服务请求超时或 HTTP 请求格式错误，请检查并重试"),
    CODE_60009(60009,"请求资源错误，请检查请求 URL"),
    CODE_60010(60010,"请求需要 App 管理员权限"),
	CODE_60011(60011,"SDKAppID 请求频率超限，请降低请求频率"),
    CODE_60012(60012,"REST 接口需要带 SDKAppID，请检查请求 URL 中的 SDKAppID"),
    CODE_60013(60013,"HTTP 响应包 JSON 解析错误"),
    CODE_60014(60014,"置换帐号超时"),
	CODE_60015(60015,"请求包体帐号类型错误，请确认帐号为字符串格式"),
    CODE_60016(60016,"SDKAppID 被禁用。"),
    CODE_60017(60017,"请求被禁用。"),
    CODE_60018(60018,"请求过于频繁，请稍后重试。"),
    CODE_60019(60019,"请求过于频繁，请稍后重试。"),
    CODE_60020(60020,"您的专业版套餐包已到期并停用，请登录 即时通信 IM 购买页面 重新购买套餐包。购买后，将在5分钟后生效。"),
    CODE_60021(60021,"RestAPI 调用来源 IP 非法。"),
    /**
     * 账号管理错误码
     * 请阅读：<a href="https://cloud.tencent.com/document/product/269/1608">REST API 错误码</a>
     */
    CODE_40005(40005,"资料字段中包含敏感词"),
    CODE_40006(40006,"设置资料时服务器内部错误，请稍后重试"),
    CODE_40601(40601,"资料字段的 Value 长度超过500字节"),
    CODE_70169(70169,"服务端内部超时，请稍后重试"),
    CODE_70398(70398,"帐号数超限。如需创建多于100个帐号，请将应用升级为专业版"),
    CODE_70402(70402,"参数非法，请检查必填字段是否填充，或者字段的填充是否满足协议要求"),
    CODE_70403(70403,"请求失败，需要 App 管理员权限"),
    CODE_70500(70500,"服务器内部错误，请稍后重试"),
    CODE_70202(70202,"服务端内部超时，请稍后重试"),
    CODE_70107(70107,"请求的用户帐号不存在"),
    CODE_90001(90001,"JSON 格式解析失败，请检查请求包是否符合 JSON 规范。或者 To_Account 是空数组"),
    CODE_90003(90003,"JSON 格式请求包中 To_Account 不符合消息格式描述，请检查 To_Account 类型是否为 String"),
    CODE_90009(90009,"请求需要 App 管理员权限"),
    CODE_90011(90011,"批量发消息目标帐号超过500，请减少 To_Account 中目标帐号数量"),
    CODE_90992(90992,"后端服务超时，请重试"),
    CODE_90994(90994,"服务内部错误，请重试"),
    CODE_90995(90995,"服务内部错误，请重试"),
    CODE_91000(91000,"服务内部错误，请重试"),
    /**
     * 单聊消息错误码
     */
    CODE_20001(20001,"请求包非法"),
    CODE_20002(20002,"UserSig 或 A2 失效"),
    CODE_20003(20003,"消息发送方或接收方 UserID 无效或不存在，请检查 UserID 是否已导入即时通信 IM"),
    CODE_20004(20004,"网络异常，请重试"),
    CODE_20005(20005,"服务器内部错误，请重试"),
    CODE_20006(20006,"触发发送单聊消息之前回调，App 后台返回禁止下发该消息"),
    CODE_20007(20007,"已被拉黑，无法发送消息"),
    CODE_20009(20009,"仅允许好友之间发送单聊消息"),
    CODE_90002(90002,"JSON 格式请求包中 MsgBody 不符合消息格式描述，或者 MsgBody 不是 Array 类型，请参考 TIMMsgElement 对象 的定义"),
    CODE_90005(90005,"JSON 格式请求包体中缺少 MsgRandom 字段或者 MsgRandom 字段不是 Integer 类型"),
    CODE_90006(90006,"JSON 格式请求包体中 MsgTimeStamp 字段不是 Integer 类型"),
    CODE_90007(90007,"JSON 格式请求包体中 MsgBody 类型不是 Array 类型，请将其修改为 Array 类型"),
    CODE_90008(90008,"JSON 格式请求包体中缺少 From_Account 字段，或者From_Account 不存在"),
    CODE_90010(90010,"JSON 格式请求包不符合消息格式描述，请参考 TIMMsgElement 对象 的定义"),
    CODE_90012(90012,"To_Account 没有注册或不存在，请确认 To_Account 是否导入即时通信 IM 或者是否拼写错误"),
    CODE_90026(90026,"消息离线存储时间错误（最多不能超过7天）"),
    CODE_90031(90031,"JSON 格式请求包体中 SyncOtherMachine 字段不是 Integer 类型"),
    CODE_90044(90044,"JSON 格式请求包体中 MsgLifeTime 字段不是 Integer 类型"),
    CODE_93000(93000,"JSON 数据包超长，消息包体请不要超过 8k"),
    CODE_90048(90048,"请求的用户帐号不存在"),
    CODE_90054(90054,"撤回请求中的 MsgKey 不合法"),
    CODE_20022(20022,"该待撤回的消息不存在，请检查。"),
    CODE_20023(20023,"该消息已被撤回。"),
    /**
     * 资料管理
     */
    CODE_40001(40001,"请求参数错误，请根据错误描述检查请求参数。"),
    CODE_40002(40002,"请求参数错误，没有指定 To_Account。"),
    CODE_40003(40003,"请求的用户帐号不存在。"),
    CODE_40004(40004,"请求需要 App 管理员权限。"),
    CODE_40007(40007,"没有资料字段的读权限，详情可参见 资料字段。"),
    CODE_40008(40008,"没有资料字段的写权限，详情可参见 资料字段。"),
    CODE_40009(40009,"资料字段的 Tag 不存在。"),
    CODE_40605(40605,"资料字段的 Value 长度超过500字节。"),
    CODE_40610(40610,"资料字段的 Value 类型不匹配，详情可参见 标配资料字段"),

    /**
     * 导入好友错误
     */
    CODE_30001(30001,"请求参数错误，请根据错误描述检查请求参数"),
    CODE_30002(30002,"SDKAppID 不匹配"),
    CODE_30003(30003,"请求的用户帐号不存在"),
    CODE_30004(30004,"请求需要 App 管理员权限"),
    CODE_30005(30005,"关系链字段中包含敏感词"),
    CODE_30006(30006,"服务器内部错误，请重试"),
    CODE_30007(30007,"网络超时，请稍后重试"),
    CODE_30008(30008,"并发写导致写冲突，建议使用批量方式"),
    CODE_30010(30010,"好友数已达系统上限"),
    CODE_30011(30011,"分组已达系统上限"),

    /**
     * 禁言错误
     */
    CODE_130001(130001,"JSON 格式解析失败，请检查请求包是否符合 JSON 规范"),
    CODE_130004(130004,"JSON 格式请求包中没有 Set_Account 字段"),
    CODE_130005(130005,"JSON 格式请求包中的 Set_Account 字段无效"),
    CODE_130006(130008,"JSON 格式请求包中 GroupmsgNospeakingTime 和 C2CmsgNospeakingTime 这两个字段都没有填写"),
    CODE_130014(130014,"系统错误，请再次尝试或联系技术客服"),

    /**
     * 运营错误
     */
    CODE_1001(1001,"请求非法；请检查“请求 URL”是否正确"),
    CODE_1002(1002,"参数非法；请检查是否管理员帐号，必填字段是否填充，或者字段的填充是否满足协议要求。"),
    CODE_1003(1003,"系统错误。"),
    CODE_1004(1004,"文件尚未生成，或者请求时段内没有消息。"),
    CODE_1005(1005,"文件已过期"),
    CODE_130009(130009,"SQL Open 错误"),
    CODE_130010(130010,"SQL Ping 错误"),
    CODE_130011(130011,"SQL 查询错误"),
    CODE_130012(130012,"SQL 结果解析错误"),
    /**
     * 群组错误
     */
    CODE_10002(10002,"服务器内部错误，请重试"),
    CODE_10003(10003,"请求命令非法"),
    CODE_10004(10004,"参数非法，请根据错误描述检查请求是否正确"),
    CODE_10007(10007,"操作权限不足，例如 Public 群组中普通成员尝试执行踢人操作，但只有 App 管理员才有权限"),
    CODE_10010(10010,"群组不存在，或者曾经存在过，但是目前已经被解散"),
    CODE_10015(10015,"群组 ID 非法，请检查群组 ID 是否填写正确"),
    CODE_10021(10021,"群组 ID 重复"),



    ;

    private int code;
    private String msg;

    ApiErrorMsgEnum(int code, String msg) {
        this.code = code;
        this.msg = msg;
    }

    /**
     * 通过错误代码查找其中文含义..
     */
    public static String findMsgByCode(int code) {
        for (ApiErrorMsgEnum value : ApiErrorMsgEnum.values()) {
            if (value.code == code) {
                return value.msg;
            }
        }

        return null;
    }
}
